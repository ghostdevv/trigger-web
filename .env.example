# Random values, can use `openssl rand -hex 16`
SESSION_SECRET=
MAGIC_LINK_SECRET=
ENCRYPTION_KEY=
MANAGED_WORKER_SECRET=

# Postgres
POSTGRES_USER=trigger
POSTGRES_PASSWORD=___
DATABASE_URL=postgresql://trigger:___@postgres:5432/main?schema=public&sslmode=disable
DIRECT_URL=postgresql://trigger:___@postgres:5432/main?schema=public&sslmode=disable

# Image tags
TRIGGER_IMAGE_TAG=v4.0.0
POSTGRES_IMAGE_TAG=14
REDIS_IMAGE_TAG=7
ELECTRIC_IMAGE_TAG=1.0.13
CLICKHOUSE_IMAGE_TAG=latest
REGISTRY_IMAGE_TAG=2
MINIO_IMAGE_TAG=latest

# Webapp
# - These should generally be set to the same value
# - In production, these should be set to the public URL of your webapp, e.g. https://trigger.example.com
APP_ORIGIN=___
LOGIN_ORIGIN=___
API_ORIGIN=___
DEV_OTEL_EXPORTER_OTLP_ENDPOINT=___/otel

# Webapp - memory management
# - This sets the maximum memory allocation for Node.js heap in MiB (e.g. "4096" for 4GB)
# - It should be set according to your total webapp machine's memory or any container limits you have set
# - Setting this too high or low WILL cause crashes, inefficient memory utilization and high CPU usage
# - You should allow for some memory overhead, we suggest at least 20%, for example:
#   - 2GB machine: NODE_MAX_OLD_SPACE_SIZE=1600
#   - 4GB machine: NODE_MAX_OLD_SPACE_SIZE=3200
#   - 6GB machine: NODE_MAX_OLD_SPACE_SIZE=4800
#   - 8GB machine: NODE_MAX_OLD_SPACE_SIZE=6400
NODE_MAX_OLD_SPACE_SIZE=3200

# ClickHouse
CLICKHOUSE_USER=trigger
CLICKHOUSE_PASSWORD=___
CLICKHOUSE_URL=http://trigger:___@clickhouse:8123?secure=false
RUN_REPLICATION_CLICKHOUSE_URL=http://trigger:___@clickhouse:8123

# Docker Registry
# - The url should just be a fqdn, i.e. registry.example.com - no https://
DOCKER_REGISTRY_URL=
DOCKER_REGISTRY_NAMESPACE="trigger"

# Object store
# - You need to log into the Minio dashboard and create a bucket called "packets"
# - See the docs for more information: https://trigger.dev/docs/self-hosting/docker#object-storage
OBJECT_STORE_ACCESS_KEY_ID=admin
OBJECT_STORE_SECRET_ACCESS_KEY=
# You will have to uncomment and configure this for production
OBJECT_STORE_BASE_URL=
# Credentials to access the Minio dashboard at http://localhost:9001
# - You should change these credentials and not use them for the `OBJECT_STORE_` env vars above
# - Instead, setup a non-root user with access the "packets" bucket
MINIO_ROOT_USER=admin
MINIO_ROOT_PASSWORD=

# Email
EMAIL_TRANSPORT="smtp"
FROM_EMAIL=""
REPLY_TO_EMAIL=""
SMTP_HOST=""
SMTP_PORT="587"
SMTP_USER="xtendops-trigger"
SMTP_PASSWORD=""
WHITELISTED_EMAILS=""

# Slack for alerts
ORG_SLACK_INTEGRATION_CLIENT_ID=""
ORG_SLACK_INTEGRATION_CLIENT_SECRET=""
